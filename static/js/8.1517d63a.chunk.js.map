{"version":3,"sources":["views/CastView/CastView.module.css","views/CastView/CastView.js"],"names":["module","exports","CastView","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","a","console","log","fetchByIdMoviesActors","response","data","fetch","className","style","CastContainer","CustomLoader","CastList","map","CastItem","src","profile_path","alt","name","CastListContainer","character","id"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,SAAW,6B,4KCsDpDC,EAjDE,WACf,IAAQC,EAAYC,cAAZD,QACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,qBAAU,YACG,uCAAG,4BAAAC,EAAA,6DACZF,GAAW,GACXG,QAAQC,IAAIV,GAFA,kBAIaW,YAAsBX,GAJnC,OAIJY,EAJI,OAKVN,GAAW,GACXF,EAAQQ,EAASC,KAAKV,MANZ,kDAQVM,QAAQC,IAAI,KAAME,UAClBN,GAAW,GATD,0DAAH,qDAYXQ,KACC,CAACd,IAGF,qCACE,uCACA,sBAAKe,UAAWC,IAAMC,cAAtB,UACGZ,GAAWa,IACXf,GACC,oBAAIY,UAAWC,IAAMG,SAArB,SACGhB,EAAKiB,KAAI,SAAAjB,GACR,OACE,qBAAIY,UAAWC,IAAMK,SAArB,UACE,qBACEC,IAAG,0CAAqCnB,EAAKoB,cAC7CC,IAAKrB,EAAKsB,OAEZ,sBAAKV,UAAWC,IAAMU,kBAAtB,UACE,6CAAgBvB,EAAKwB,UAArB,OACA,wCAAWxB,EAAKsB,KAAhB,YAPgCtB,EAAKyB","file":"static/js/8.1517d63a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastList\":\"CastView_CastList__2AJvI\",\"CastItem\":\"CastView_CastItem___Qm62\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CustomLoader from 'components/SpinnerLoader/SpinnerLoader';\nimport { fetchByIdMoviesActors } from 'services/movieAPI';\nimport style from './CastView.module.css';\n\nconst CastView = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoading(true);\n      console.log(movieId);\n      try {\n        const response = await fetchByIdMoviesActors(movieId);\n        setLoading(false);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log(error.response);\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Cast:</h2>\n      <div className={style.CastContainer}>\n        {loading && CustomLoader}\n        {cast && (\n          <ul className={style.CastList}>\n            {cast.map(cast => {\n              return (\n                <li className={style.CastItem} key={cast.id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n                    alt={cast.name}\n                  />\n                  <div className={style.CastListContainer}>\n                    <h3>Character: {cast.character} </h3>\n                    <h3>Name: {cast.name} </h3>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CastView;\n"],"sourceRoot":""}