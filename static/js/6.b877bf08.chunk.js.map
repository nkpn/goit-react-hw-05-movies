{"version":3,"sources":["views/HomeView/HomeView.module.css","views/HomeView/HomeView.js","services/movieAPI.js"],"names":["module","exports","HomeView","useState","movies","setMovies","loading","setLoading","useRouteMatch","useEffect","fetchTrandingmovies","a","fetchByTrending","resultData","console","log","map","movie","className","style","Item","Link","to","id","name","title","URL","KEY","axios","get","then","res","data","results","fetchByIdMovies","movieId","fetchByIdMoviesActors","fetchByIdMoviesReviews","fetchOnSearch","search"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,yB,mLCKxC,SAASC,IACtB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,MAArC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACcC,cAEdC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAmB,uCAAG,4BAAAC,EAAA,6DAC1BJ,GAAW,GADe,kBAGCK,cAHD,OAGlBC,EAHkB,OAIxBR,EAAUQ,GACVN,GAAW,GALa,gDAOxBO,QAAQC,IAAI,KAAMF,YAClBN,GAAW,GARa,yDAAH,qDAYzB,OACE,gCACE,iDACCD,GAAW,cAAC,IAAD,IACXF,GACC,6BACGA,EAAOY,KAAI,SAAAC,GACV,OACE,oBAAIC,UAAWC,IAAMC,KAArB,SACE,cAAC,IAAD,CAAMF,UAAWC,IAAME,KAAMC,GAAE,iBAAYL,EAAMM,IAAjD,SACGN,EAAMO,KAAOP,EAAMO,KAAOP,EAAMQ,SAFLR,EAAMM,c,wPClC9CG,EAAM,gCACNC,EAAM,mCAENf,EAAe,uCAAG,sBAAAD,EAAA,sEACTiB,IACVC,IADU,UACHH,EADG,oCAC4BC,IACtCG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,WAHF,mFAAH,qDAMfC,EAAe,uCAAG,WAAMC,GAAN,SAAAxB,EAAA,sEACTiB,IAAMC,IAAN,UAAaH,EAAb,iBAAyBS,EAAzB,oBAA4CR,IADnC,mFAAH,sDAIfS,EAAqB,uCAAG,WAAMD,GAAN,SAAAxB,EAAA,sEACfiB,IAAMC,IAAN,UAAaH,EAAb,kBAA0BS,EAA1B,4BAAqDR,IADtC,mFAAH,sDAIrBU,EAAsB,uCAAG,WAAMF,GAAN,SAAAxB,EAAA,sEAChBiB,IAAMC,IAAN,UACRH,EADQ,iBACIS,EADJ,4BAC+BR,EAD/B,2BADgB,mFAAH,sDAMtBW,EAAa,uCAAG,WAAMC,GAAN,SAAA5B,EAAA,sEACPiB,IAAMC,IAAN,UACRH,EADQ,gCACmBC,EADnB,yBACuCY,IAFhC,mFAAH","file":"static/js/6.b877bf08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"HomeView_Item__3AjWG\",\"Link\":\"HomeView_Link__19CXo\"};","import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { fetchByTrending } from 'services/movieAPI';\nimport style from './HomeView.module.css';\nimport CustomLoader from 'components/SpinnerLoader/SpinnerLoader';\n\nexport default function HomeView() {\n  const [movies, setMovies] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    fetchTrandingmovies();\n  }, []);\n\n  const fetchTrandingmovies = async () => {\n    setLoading(true);\n    try {\n      const resultData = await fetchByTrending();\n      setMovies(resultData);\n      setLoading(false);\n    } catch (error) {\n      console.log(error.resultData);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Tranding today:</h1>\n      {loading && <CustomLoader />}\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li className={style.Item} key={movie.id}>\n                <Link className={style.Link} to={`movies/${movie.id}`}>\n                  {movie.name ? movie.name : movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '720fdb62fff13ad66b8dd7c6de97ca06';\n\nconst fetchByTrending = async () => {\n  return await axios\n    .get(`${URL}trending/all/day?api_key=${KEY}`)\n    .then(res => res.data.results);\n};\n\nconst fetchByIdMovies = async movieId => {\n  return await axios.get(`${URL}movie/${movieId}?api_key=${KEY}`);\n};\n\nconst fetchByIdMoviesActors = async movieId => {\n  return await axios.get(`${URL}/movie/${movieId}/credits?api_key=${KEY}`);\n};\n\nconst fetchByIdMoviesReviews = async movieId => {\n  return await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  );\n};\n\nconst fetchOnSearch = async search => {\n  return await axios.get(\n    `${URL}search/movie?api_key=${KEY}&page=1&query=${search}`,\n  );\n};\n\nexport {\n  fetchByTrending,\n  fetchByIdMovies,\n  fetchByIdMoviesActors,\n  fetchByIdMoviesReviews,\n  fetchOnSearch,\n};\n"],"sourceRoot":""}